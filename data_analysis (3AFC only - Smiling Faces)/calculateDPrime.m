function output = calculateDPrime(dataStructure)
    
    % Blank is the distractor face (D):
    % +--------------+-----------+-----------+-----------+
    % |  Trial Type  | faceType1 | faceType2 | faceType3 |
    % +--------------+-----------+-----------+-----------+
    % |              |     T     |     N     |           |
    % |              +-----------+-----------+-----------+
    % |     <T,N>    |     T     |           |     N     |
    % |              +-----------+-----------+-----------+
    % |              |           |     T     |     N     |
    % +--------------+-----------+-----------+-----------+
    % |              |     N     |     T     |           |
    % |              +-----------+-----------+-----------+
    % |     <N,T>    |     N     |           |     T     |
    % |              +-----------+-----------+-----------+
    % |              |           |     N     |     T     |
    % +--------------+-----------+-----------+-----------+
    
    
    % ------------------------ High PE ------------------------
    
    % <T,N> && chose target
    nHits_HighPE = length(returnIndicesIntersect(... % <T,N,D>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <T,D,N>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'non-target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,T,N>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 1,...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'non-target'));
                        
                        
                       
    % <N,T> && chose non-target
    nFAs_HighPE = length(returnIndicesIntersect(... % <N,T,D>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <N,D,T>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,N,T>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 1,...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'target'));
    
    % Total number of <Target, Non-target> trials
    nTN_HighPE = length(returnIndicesIntersect(... % <T,N,D>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <T,D,N>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'non-target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,T,N>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'non-target'));
                        
    % Total number of <Non-target, Target> trials
    nNT_HighPE = length(returnIndicesIntersect(... % <N,T,D>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <N,D,T>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,N,T>
                            dataStructure.PE,'high',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'target'));
    
    
    % Hit Rate for High PE
    hitRate_HighPE = nHits_HighPE/nTN_HighPE;
    FARate_HighPE = nFAs_HighPE/nNT_HighPE;
    
    % Correct the rates if necessary
    hitRate_HighPE = rateCorrection(hitRate_HighPE, nTN_HighPE);
    FARate_HighPE = rateCorrection(FARate_HighPE, nNT_HighPE);
    
    % Calculate z-score of high PE Hits and FAs
    hits_HighPE_zScore = norminv(hitRate_HighPE);
    FAs_HighPE_zScore = norminv(FARate_HighPE);
    
    % Calculate d'
    dPrime_HighPE = hits_HighPE_zScore - FAs_HighPE_zScore;
    
    % ------------------------ Low PE ------------------------
    
    % <T,N> && chose target
    nHits_LowPE = length(returnIndicesIntersect(... % <T,N,D>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <T,D,N>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'non-target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,T,N>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 1,...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'non-target'));
                       
    % <N,T> && chose target
    nFAs_LowPE = length(returnIndicesIntersect(... % <N,T,D>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <N,D,T>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 0,...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,N,T>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.button_pressed, 1,...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'target'));
    
    % Total number of <Target, Non-target> trials
    nTN_LowPE =  length(returnIndicesIntersect(... % <T,N,D>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <T,D,N>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'non-target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,T,N>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'non-target'));
                        
    % Total number of <Non-target, Target> trials
    nNT_LowPE = length(returnIndicesIntersect(... % <N,T,D>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'target',...
                            dataStructure.faceType3, 'distractor'))...
                    +...
                    length(returnIndicesIntersect(... % <N,D,T>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'non-target',...
                            dataStructure.faceType2, 'distractor',...
                            dataStructure.faceType3, 'target'))...
                    +...
                    length(returnIndicesIntersect(... % <D,N,T>
                            dataStructure.PE,'low',...
                            dataStructure.trialType,'3AFC',...
                            dataStructure.faceType1, 'distractor',...
                            dataStructure.faceType2, 'non-target',...
                            dataStructure.faceType3, 'target'));
    
    % Hit Rate for Low PE
    hitRate_LowPE = nHits_LowPE/nTN_LowPE;
    FARate_LowPE = nFAs_LowPE/nNT_LowPE;
    
    % Correct the rates if necessary
    hitRate_LowPE = rateCorrection(hitRate_LowPE, nTN_LowPE);
    FARate_LowPE = rateCorrection(FARate_LowPE, nNT_LowPE);
    
    % Calculate z-score of high PE Hits and FAs
    hits_LowPE_zScore = norminv(hitRate_LowPE);
    FAs_LowPE_zScore = norminv(FARate_LowPE);
    
    % Calculate d'
    dPrime_LowPE = hits_LowPE_zScore - FAs_LowPE_zScore;
    
    % ------ Return -----
    
    output = [dPrime_HighPE, dPrime_LowPE];
    
end